<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="put:/vehicle/division:application/json:api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/vehicle/model:application/json:api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/vehicle/subdivision:application/json:api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/vehicle/division:api-config">
        <set-variable variableName="serviceInput" value="divisionName = '#[message.inboundProperties.'http.query.params'.divisionName]'" doc:name="serviceInput"/>
        <flow-ref name="getDivisionsSubFlow" doc:name="getDivisionsSubFlow"/>
        <dw:transform-message doc:name="divisionResponse">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	vehicleDivision: flowVars.divisionResponse map ((divisionResponse , indexOfDivisionResponse) -> {
		divisionID: divisionResponse.divisionID as :string,
		divisionName: divisionResponse.divisionName,
		manufacturerID: divisionResponse.manufacturerID
	})
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/vehicle/model:api-config">
        <set-variable variableName="serviceInput" value="modelID = '#[message.inboundProperties.'http.query.params'.modelID]'" doc:name="serviceInput"/>
        <flow-ref name="getModelSubFlow" doc:name="getModelSubFlow"/>
        <dw:transform-message doc:name="modelResponse">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.modelResponse]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/vehicle/subdivision:api-config">
        <set-variable variableName="serviceInput" value="divisionID = '#[message.inboundProperties.'http.query.params'.divisionID]'" doc:name="serviceInput"/>
        <flow-ref name="getSubdivisionsSubFlow" doc:name="getSubdivisionsSubFlow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	subdivision: flowVars.subdivisionsOutput map ((subdivisionsOutput , indexOfSubdivisionsOutput) -> {
		Year: subdivisionsOutput.Year,
		histSubdivisionID: subdivisionsOutput.histSubdivisionID as :string,
		modelYear: subdivisionsOutput.modelYear as :string,
		subdivisionID: subdivisionsOutput.subdivisionID as :string,
		subdivisionName: subdivisionsOutput.subdivisionName
	})
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/search/vehicle:api-config">
        <flow-ref name="searchFlow" doc:name="searchFlow"/>
    </flow>
     <flow name="get:/search/sippcode:api-config">
        <logger message="#[message.inboundProperties.'http.query.params'.sippCode]" level="INFO" doc:name="Logger"/>
        <flow-ref name="search-sippcodeFlow" doc:name="search-sippcodeFlow"/>
    </flow>
    <flow name="post:/vehicle/division:application/json:api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/vehicle/model:application/json:api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/vehicle/subdivision:application/json:api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
   
</mule>
